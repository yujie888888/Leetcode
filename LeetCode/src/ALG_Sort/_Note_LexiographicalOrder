/** Lexicographical Order **/
    字典序规则：
        当比较两个字符串时
            1.从两个字符串的第一个字符开始比较，直到找到一个不同的字符或到达字符串的末尾。
            2.一旦发现两个字符不同，比较就会停止，并根据这两个字符的编码值来决定两个字符串的先后顺序。
                字母char基于ASCII码表
                    "A"在"Z"之前
                    "a"在"z"之前
                    "A"在"a"之前
                2.1.在第一个不同的字符处，在字符集中位置较前的字符，所在的字符串就被认为是较小的字符串
                    Ex:
                        "aac","aab","aaa" -> "aaa","aab","aac"
                        "apple","banana" -> "apple","banana"
                        "hello","helium" -> "helium","hello"
                2.2.如果一个字符串是另一个字符串的前缀，那么较短的字符串被认为是较小的字符串
                    Ex: aab,aac,aa -> aa,aab,aac
                2.3.如果两个字符串从头到尾都相同，那么它们被认为是相等的
    字典序使用：
        java的compareTo方法默认按字典顺序执行

    /* 数字字典序 */
        Ex. 假设我们有以下数字列表：
            56,123,57,7,12,133
            按数值大小排序后的结果是：
            7,12,56,57,123,133
            而按字典序排序后的结果是：
            12,123,133,56,57,7
        特殊情况,前导零
            如果数字字符串包含前导零，这些零在数值比较时应被忽略。在比较这种字符串前，可以先去除前导零。