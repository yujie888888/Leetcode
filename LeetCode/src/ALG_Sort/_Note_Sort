1.冒泡排序（Bubble Sort）
稳定性：稳定
时间复杂度：平均和最坏情况都是 O(n^2)
空间复杂度：O(1)
特点：简单，但效率低下，适合小数据量排序
-------------------------------------------
2.选择排序（Selection Sort）
稳定性：不稳定（可以通过适当的调整实现稳定性）
时间复杂度：总是O(n^2)
空间复杂度：O(1)
特点：简单，性能与冒泡排序相似，不依赖于数据的初始排列
-------------------------------------------
3.插入排序（Insertion Sort）
稳定性：稳定
时间复杂度：平均O(n^2)最佳𝑂(𝑛)
O(n)（当输入数组已经是部分有序时）
空间复杂度：O(1)
特点：适合部分排序的数组或小数据量排序，对近乎有序的数据效率很高
-------------------------------------------
4.(重点)归并排序（Merge Sort）
稳定性：稳定
时间复杂度：总是O(nlogn)
空间复杂度：O(n)（非原地排序）
特点：非常适合大数据量排序，也适合链表类型的数据结构，支持外部排序
-------------------------------------------
5.快速排序（Quick Sort）
稳定性：不稳定
时间复杂度：平均 O(nlogn)，最坏 O(n^2)
空间复杂度：平均 O(logn)，最坏 O(n)
特点：广泛应用的高效排序算法，适合大数据量，但在选择不当的基准值时性能会降低
-------------------------------------------
堆排序（Heap Sort）
稳定性：不稳定
时间复杂度：总是 O(nlogn)
空间复杂度：O(1)
特点：利用堆数据结构进行排序，适合大数据量，性能稳定