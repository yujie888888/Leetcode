##Floyd-Warshall
    用于计算任意两点之间最短路径的算法，特别适用于加权图
    能够处理包含负权重边的图，但不能处理包含负权重环的图
    就是一个动态规划
    #核心思想#
        每两个点之间的最短路径不仅仅是直接相连的两个点，还有可能是不直接相连的两个点，引入中间节点k
        逐步考虑中间节点的加入，来更新所有节点对之间的最短路径。算法的核心在于逐步更新路径，使得每次迭代都尝试通过中间节点k来优化起点i到终点j的路径
    #步骤#
        1.初始化：
            创建一个dist矩阵，其中dist[i][j]表示节点i到节点j的最短路径长度。
            初始时，如果i和j之间有边，则dist[i][j]为边的权重，否则为无穷大（表示不可达）。
            对角线上的元素（即dist[i][i]）初始化为0。
        2.动态规划逻辑
            逐步考虑每一个节点作为中间节点来更新路径长度。
            对于每一对起点i和终点j，如果通过中间节点k可以缩短路径长度，则更新dist[i][j]。
            具体地，对于每一个节点k，更新所有dist[i][j]为min(dist[i][j], dist[i][k] + dist[k][j])。

##Dijkstra
    Dijkstra 算法是一种贪心算法
    Dijkstra算法是一个经典的单源最短路径算法
    用于计算从给定起点到图中所有其他节点的最短路径
    主要用于加权图，其中边的权重非负
    #步骤#
        通过逐步扩展起点到其他节点的最短路径，
        依次选择当前已知的最短路径的节点，
        更新其邻接节点的路径长度，
        直到所有节点的最短路径都确定为止