/**滑动窗口**/
        最短模板：
        while(right->end){
            window扩大，加入right指向的元素，更新result
            while(满足条件){
                更新result
                窗口缩小，移除left对应的元素
            }
            right++；
        }
        最长模板：
        while(right->end){
            window扩大，加入right指向的元素，更新result
            while(不满足条件){
                窗口缩小，移除left对应的元素
            }
            更新result
            right++；
        }
/**应用场景**/
    1.可变大小的窗口问题: 寻找满足某种条件的最小或最大子数组/子字符串。
        例如：
            1.1.固定和最短子数组问题：给定一个含有n个正整数的数组和一个正整数s，找出该数组中满足其和≥s的长度最小的连续子数组，并返回其长度
            1.2.最大和连续子数组问题：给定一个整数数组，找到具有最大和的连续子数组（至少包含一个数字），返回其最大和
            1.3.最小覆盖子串问题：输入一个字符串s、一个字符串t，返回s中涵盖t所有字符的最小子串 -76-
            1.4.找出数组或字符串中的最长无重复字符子串 -3-

    2.固定大小的窗口问题：窗口的大小是固定的，需要按照一定的规则移动窗口，并计算或更新窗口内元素的某种统计量
        例如：
            2.1.计算给定大小窗口内的最大值或平均值。
            2.2.字符串排列与子串问题
                字符串中所有字母异位词问题：给定两个字符串s和p，找到s中所有是p的字母异位词的子串，返回这些子串的起始索引。就是固定窗口大小找单词。-p438-

    4.跟踪问题：在一些需要跟踪过去一段时间内元素状态的问题中，滑动窗口可以有效地更新和计算窗口内的状态。
        例如：
            4.1.跟踪过去N秒内的请求量或事务。


HashMap和Slide Window结合的题
1.最小覆盖子串问题 -76-
2.所有异位词问题 -438-
3.最长无重复子串 -3-

/**可练习题目**/
     slide window的前12道frequency的medium和easy题(0/6)